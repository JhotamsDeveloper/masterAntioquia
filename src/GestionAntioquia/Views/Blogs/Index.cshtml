@model PaginatedList<Model.Event>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["imagen"] = Url.Content("~/images/create_places.jpg");
}

<!-- Home -->
<div class="home">
    <div class="parallax_background parallax-window" data-parallax="scroll" data-image-src="@ViewData["imagen"]" data-speed="0.8"></div>
    <div class="home_container">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="home_content">
                        <div class="home_title">Panel Productos</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">

    <div class="row justify-content-md-center">

        <div class="col-md-12">
            <div class="md-form">
                <a class="btn button_2 btn-lg btn-block mt-5" asp-action="Create">
                    <h3 style="color:aliceblue">Crear un nuevo lugar</h3>
                </a>
            </div>
        </div>

    </div>



    <form asp-action="Index" method="get">
        <div class="row align-items-center">

            <div class="col-md-4 mt-2">

                <div class="md-form">
                    <input type="text" class="form-control" name="SearchString" id="search" placeholder="Haga la busquéda por nombre" value="@ViewData["currentFilter"]" aria-describedby="searchHelp">
                </div>

            </div>
            <div class="col-md-4 mt-2">

                <div class="md-form">
                    <input type="submit" value="buscar" class="btn button button_2 btn-block" style="color:aliceblue" />
                </div>

            </div>
            <div class="col-md-4 mt-2">

                <div class="md-form">
                    <input type="submit" value="Volver a la lista completa" class="btn button button_3 btn-block" />
                </div>

            </div>
        </div>
    </form>

</div>

<div class="container mt-5">

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr class="m-2">
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Autor</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Fecha</a>
                    </th>
                    <th>
                        Estado
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Author)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.State)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.EventId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.EventId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.EventId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>



    <div class="text-center">

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>

    </div>

</div>
